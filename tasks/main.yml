---
# Title: Nginx Certbot (Letsencrypt)
#
# Author: Bitfinity / L. Rutten
# Owner: Bitfinity / L. Rutten
#
# File: tasks/main.yml
#
# Description:
#   This taskfile contains the settings for
#   installing nginx and certbot for generating
#   Letsencrypt Certificate.
#
# Source(s):
#   - https://certbot.eff.org/instructions?ws=nginx&os=ubuntufocal
#   - https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-22-04
#
- name: "Install APT packages"
  apt:
    pkg:
    - nginx
    
- name: "Configure UFW for Nginx"
  ufw:
    rule: allow
    name: Nginx Full

- name: "Create default www directory"
  file:
    path: "/var/www/{{ certbot_servername }}"
    state: directory
    owner: www-data
    group: www-data
    mode: 0755
    
- name: "Transfer Nginx templates"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: 'templates/example.com.j2', dest: '/etc/nginx/sites-available/{{ certbot_servername }}' }
    #- { src: 'templates/index.html.j2', dest: '/var/www/{{ nginx_server_name }}/index.html' }
    
- name: "Create symlinks for Nginx"
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  with_items:
    - { src: '/etc/nginx/sites-available/{{ certbot_servername }}', dest: '/etc/nginx/sites-enabled/{{ certbot_servername }}' }
    
- name: "restart Nginx"
  systemd:
    state: restarted
    name: nginx

- name: "Remove APT certbot"
  apt:
    pkg:
    - certbot
    state: absent

- name: "Install SNAP modules"
  community.general.snap:
    name:
      - core

- name: "Install SNAP modules"
  community.general.snap:
    name:
      - certbot
    classic: true  
    
- name: "Create symlink from /snap/bin/certbot to /usr/bin/certbot"
  ansible.builtin.file:
    src: '/snap/bin/certbot'
    dest: '/usr/bin/certbot'
    state: link

- name: "Check if path /etc/letsencrypt/live/{{ certbot_servername }} exist"
  stat:
    path: "/etc/letsencrypt/live/{{ certbot_servername }}"
  register: result

- name: "Display if path /etc/letsencrypt/live/{{ certbot_servername }} exist"
  debug:
    msg: "{{ result.stat.exists }}"

- name: "Request letsencrypt certificate for domain {{ certbot_servername }} with support e-mail {{ certbot_serveradmin }}"
  # raw: certbot --agree-tos --apache -n -d {{ certbot_serveralias }} --apache -m {{ certbot_serveradmin }}
  raw: certbot --agree-tos --nginx -n -d {{ certbot_server_name }} --nginx -m {{ certbot_serveralias }}
  when: result.stat.exists == false

- name: "Renew Letsencrypt certificate for domain {{ certbot_servername }} with support e-mail {{ certbot_serveradmin }}"
  raw: "certbot renew"
  notify: reload_nginx
  when: result.stat.exists == true
